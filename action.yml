name: "Registry release listener"
description: "Listens for new releases on registry packages"
inputs:
  token:
    description: "Github Access Token"
    required: true
  gh-name:
    description: "Github account name"
    required: true
  gh-email:
    description: "Github account email"
    required: true

runs:
  using: composite
  steps:
    - name: "Get package registry data"
      uses: actions/checkout@v3
      with:
        repository: swift-nav/package-registry
        token: ${{ inputs.token }}
        ref: main

    - name: "Store name and version env vars"
      shell: bash
      run: |
        echo "NAME=${NAME:-${{ github.event.repository.name }}}" >> $GITHUB_ENV
        echo "VERSION=${VERSION:=${GITHUB_REF##*/}}" >> $GITHUB_ENV
        echo "Stored $NAME and $VERSION"

    - name: "Ensures release is not linked"
      shell: bash
      working-directory: data
      run: |
        if cat ${NAME,,} | grep "\"version\":\"${VERSION}\""; then
          exit 1
        fi

    - name: "Pull gen"
      shell: bash
      run: curl https://swiftnav-releases.s3.us-west-2.amazonaws.com/swift-cli/reg-gen -o gen

    - name: "Modify data to link release"
      shell: bash
      env:
        NAME: ${{ env.NAME }}
        VERSION: ${{ env.VERSION }}
        GH_TOKEN: ${{ inputs.token }}
      run: |
        gh auth setup-git
        (git show-branch $BRANCH &>/dev/null) && (git checkout $BRANCH) || (git checkout -b $BRANCH)
        git reset --hard main
        chmod +x ./gen
        ./gen

    - name: "Create pull request from changes"
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        BRANCH: coolbot/update-${{ env.NAME }}-${{ env.VERSION }}
      run: |
        git config --global user.email "${{ inputs.gh-email }}"
        git config --global user.name "${{ inputs.gh-name }}"
        git add data
        git commit -m "Updating release for ${{ env.NAME }}-${{ env.VERSION }}"
        
        git status
        (git push origin $BRANCH -f &> /dev/null) || (git push --set-upstream origin $BRANCH)
        gh pr create \
          --title "Release for ${{ env.NAME }}-${{ env.VERSION }}" \
          --body "Automated registry sync for ${{ env.NAME }} created by tag ${{ env.VERSION }}" \
          --reviewer swift-nav/devinfra
          
